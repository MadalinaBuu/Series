@model SeriesApp.Models.Series
@{
    ViewBag.Title = "Edit";
    var username = User.Identity.Name;
}
@using System.Data;

<div class="container overlay">
    @*<a href="@Url.Action("Index", "Home")">Click here to go back</a>*@
    @using (Html.BeginForm())
    {
        <br />
        <div class="card" style="width: 18rem;">
            <div class="card-header">
                Serial details
            </div>
            <div class="card-body">
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.User_ID)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Source)
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Seen)
                </div>
                <div class="form-check">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.CheckBoxFor(model => model.Public, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.Public, htmlAttributes: new { @class = "form-check-label" })
                </div>
                <br>
                <div class="form-group float-right">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addSeason" title="Add details"><i class="fa fa-plus"></i>Add new</button>
                </div>
            </div>
        </div>
    }
</div>
    <div class="modal fade" id="addSeason" tabindex="-1" role="dialog" aria-labelledby="addNewSeason" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addNewSeason">Add new season</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-sm-2 control-label"> Season no.:</label>
                        <div class="col-sm-10">
                            <div class="controls">
                                @{
                                    MainDbContext db = new MainDbContext();
                                    int lastSeason = db.Episodes.Where(s => s.Serial == Model.ID).OrderByDescending(s => s.Season).Select(s => s.Season).FirstOrDefault();
                                }
                                @Html.TextBox("SeasonNo", lastSeason + 1, new { @class = "form-control", @id = "SeasonNo" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-2 control-label"> Episodes no.:</label>
                        <div class="col-sm-10">
                            <div class="controls">
                                @Html.Editor("EpisodesNo", new { htmlAttributes = new { @class = "form-control", @id = "EpisodesNo" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button id="addSeason" class="btn btn-primary" onclick="AddEpisodes(@Model.ID)">Add details</button>  
                </div>
            </div>
        </div>
    </div>

<br />
<div id="divEpisodes" class="container overlay">
    @Html.Partial("Episode", Model)
</div>

<script>
    function AddEpisodes(id) {
        var SeasonNo = document.getElementById("SeasonNo").value;
        var EpisodesNo = document.getElementById("EpisodesNo").value;
    $.ajax({
        url: '@Url.Content("~/Home/AddEpisodes/")',
        type: 'POST',
        dataType: 'text',
        data: { 'id': id, 'SeasonNo': SeasonNo, 'EpisodesNo': EpisodesNo },
        success: function (result) {
            console.log("in");
            if (result) {
                $("#divEpisodes").load(location.href + " #divEpisodes");
                $('#addSeason').modal('hide');
            }
        }
    });
}
</script>